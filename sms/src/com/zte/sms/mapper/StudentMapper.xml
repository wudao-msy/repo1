<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zte.sms.dao.StudentDAO">

    <resultMap type="Student" id="studentResultMap">
    	<id property="sid" column="sid"/>
    	<result property="username" column="username"/>
    	<result property="password" column="password"/>
    	<result property="name" column="name"/>
    	<result property="gender" column="gender"/>
    	<result property="age" column="age"/>
    	<association property="grade" javaType="grade">
    	    <id property="gid" column="gid"/>
    		<result property="gname" column="gname"/>
    	</association>
    	<association property="course" javaType="com.zte.sms.entity.Course">
    	    <id property="cid" column="cid"/>
    		<result property="cname" column="cname"/>
    	</association>
    	
    </resultMap>

	<!-- public List<Student> selectStudentsByPage(); -->
	<select id="selectStudentsByPage" resultMap="studentResultMap">
		SELECT
			s.sid,s.username,s.password,s.name,s.gender,s.age,g.gname,c.cname
		FROM
			student s
		LEFT JOIN grade g
			on s.gid=g.gid
		LEFT JOIN course c
			on s.cid=c.cid
	</select>
	
	<!-- 
	public Student selectByUsername(String username);
	 -->
	<select id="selectByUsername" resultType="student">
		SELECT
			s.sid,s.username,s.password,s.name,s.gender,s.age,g.gname,c.cname
		FROM
			student s
		LEFT JOIN grade g
			on s.gid=g.gid
		LEFT JOIN course c
			on s.cid=c.cid
		where
			s.username=#{username}
		
		
	</select>
	
	<!-- 
	 public void insertStudent(Student student);
	 -->
	<insert id="insertStudent" parameterType="student">
		INSERT INTO
			student
			(username,password,name,gender,age,gid,cid)
		VALUES
			(#{username},#{password},#{name},#{gender},#{age},#{gid},#{cid})
	</insert>
	
	<!-- 
	public Student selectById(int sid);
	 -->
	<select id="selectById" resultMap="studentResultMap">
		SELECT
			s.sid,s.username,s.password,s.name,s.gender,s.age,g.gid,g.gname,c.cid,c.cname
		FROM
			student s
		LEFT JOIN grade g
			on s.gid=g.gid
		LEFT JOIN course c
			on s.cid=c.cid
		where
			s.sid=#{sid}
		
		
	</select>	
	
	<!-- 
	public void updateStudent(Student student);
	 --> 
	<update id="updateStudent" parameterType="student">
		UPDATE
			student
		SET
			username=#{username},name=#{name},gender=#{gender},age=#{age},gid=#{gid},cid=#{cid}
		where 
			sid=#{sid}
	
	
	</update>
	
	<!-- 
	public void deleteStudent(int sid);
	 -->
	<delete id="deleteStudent">
		delete
		from
			student
		where 
			sid=#{sid}
	</delete>
	
	<!-- 
		public List<Student> selectStudentsByCondition(StudentVO queryVO);
	 -->
	<select id="selectStudentsByCondition" resultMap="studentResultMap" parameterType="StudentVO">
		SELECT
			s.sid,s.username,s.password,s.name,s.gender,s.age,g.gname,c.cname
		FROM
			student s
		LEFT JOIN grade g
			on s.gid=g.gid
		LEFT JOIN course c
			on s.cid=c.cid
		<where>
			<if test="name!=null and name!=''">
				and s.name like #{name}
			</if>
			<if test="minAge!=null and minAge!=0">
				and s.age&gt;=#{minAge}
			</if>
			<if test="maxAge!=null and maxAge!=0">
				and s.age&lt;=#{maxAge}
			</if>
			<if test="gender!=null">
				and s.gender=#{gender}
			</if>
			<if test="gid!=null and gid!=0">
				and s.gid=#{gid}
			</if>
			<if test="cid!=null and cid!=0">
				and s.cid=#{cid}
			</if>
		</where>
	</select>
	 
	 <select id="selectStudentByUsernamePass" parameterType="com.zte.sms.entity.vo.StudentVO1" resultMap="studentResultMap">
		SELECT
			s.sid,s.username,s.password,s.name,s.gender,s.age,g.gname,c.cname
		FROM
			student s
		LEFT JOIN grade g
			on s.gid=g.gid
		LEFT JOIN course c
			on s.cid=c.cid
		WHERE 
			s.username=#{username} and s.password=#{password}
	</select>
	
	
	<update id="updatePass" parameterType="com.zte.sms.entity.vo.StudentVO1">
	  UPDATE
		student
	  SET
		password=#{password}
	  where 
		sid=#{sid}
	  </update>
</mapper>